# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: UsePythonVersion@0
  displayName: 'Install Python 3.x'
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: 'x64'

- task: CmdLine@2
  displayName: 'Install misc. python packages'
  inputs:
    script: |
      # latest:
      # pip package installer
      # setuptools: easily download, build, install, upgrade python packages
      # wheels: setuptools extension, fast installation
      # pytest: test package
      # pytest-cov: pytest plugin measuring coverage
      # pytest-xdist: execute tests in parallel
      # flak8: code linter
      # build: package builder
      # python3 -m pip install --upgrade pip setuptools wheel pytest pytest-cov pytest-xdist build

- task: CopyFiles@2
  inputs:
    sourceFolder: $(Build.SourcesDirectory)
    contents: '**' 
    targetFolder: $(build.artifactstagingdirectory)
    cleanTargetFolder: true

- task: DeleteFiles@1
  displayName: 'Remove unneeded files'
  inputs:
    SourceFolder: $(build.artifactstagingdirectory)
    contents: |
      azure-pipelines.yml

- task: PublishPipelineArtifact@1
  displayName: 'Publish files'
  inputs:
    targetPath: $(build.artifactstagingdirectory)
    artifactName: 'build'
    publishLocation: 'pipeline'